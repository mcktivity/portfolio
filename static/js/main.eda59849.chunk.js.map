{"version":3,"sources":["images/profile-picture.jpg","components/Page/Page.tsx","views/About.tsx","consts.js","views/Banner.tsx","views/Logo.tsx","components/Menu/Menu.tsx","components/Menu/MenuItem.tsx","views/Navigation.tsx","views/Arbeid.tsx","views/Teknologi.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","id","children","className","vh","window","innerHeight","document","documentElement","style","setProperty","addEventListener","clearTimeout","debounceResize","setTimeout","recalculate","pageClass","onClick","e","self","target","parentElement","offset","getBoundingClientRect","scroll","offsetTop","scrollTo","top","height","behavior","slideDown","Page","src","ProfilePic","name","menuBtn","getElementById","overlay","classList","contains","remove","add","openMenu","link","description","closeMenu","key","Menu","MenuItem","scrollIntoView","open","location","href","App","Logo","Navigation","Banner","About","Arbeid","Teknologi","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,6C,iJCO5B,G,WAAA,YAA6C,IAA1CC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAC1BC,EAA0B,IAArBC,OAAOC,YAChBC,SAASC,gBAAgBC,MAAMC,YAAY,OAA3C,UAAsDN,EAAtD,OAMAC,OAAOM,iBAAiB,UAAU,WAChC,IAAIP,EAA0B,IAArBC,OAAOC,YAChBM,kBANEC,GAOFC,YAAW,kBANO,SAACV,GAAD,OAClBG,SAASC,gBAAgBC,MAAMC,YAAY,OAA3C,UAAsDN,EAAtD,OAKiBW,CAAYX,KAAK,QAGpC,IAAIY,EAAoB,OAkBxB,OAjBIb,IAAWa,GAAS,WAAQb,IAkB9B,6BAASF,GAAIA,EAAIE,UAAWa,GACzBd,EACD,4BAAQC,UAAU,cAAcc,QAAS,SAACC,GAAD,OAlB7C,SAAmBA,GAEjB,IAAIC,EAAOD,EAAEE,OAAOC,cACpB,GAAKF,EAAL,CACA,IAAIG,EAASH,EAAKI,wBACdC,EAASL,EAAKM,UAGlBpB,OAAOqB,SAAS,CAAEC,IAAKL,EAAOM,OAASJ,EAAQK,SAAU,YAUPC,CAAUZ,KAA1D,UAGA,4BAAQf,UAAU,mBAAmBc,QAAS,WAThDZ,OAAOqB,SAAS,CAAEC,IAAK,EAAGE,SAAU,aASlC,aCzCS,aACb,OACE,kBAACE,EAAD,CAAM9B,GAAG,UAAUE,UAAU,WAC3B,iCACE,mDACA,2BCGN,0QDDI,iCACE,uDACA,4BACE,+EACA,kFACA,gFACA,wFACA,mG,gBEbK,aACb,OACE,kBAAC4B,EAAD,CAAM9B,GAAG,SAASE,UAAU,UAC1B,yBAAK6B,IAAKC,MACV,iDACA,4BDJJ,oHEJa,aACb,OAAO,uBAAG9B,UAAU,QAAb,gBCDM,cAAsC,IAAnCD,EAAkC,EAAlCA,SAgBhB,OACE,oCACE,4BACED,GAAG,cACHE,UAAU,WACV+B,KAAK,YACLjB,QAAS,kBAnBf,WACE,IAAMkB,EAAU5B,SAAS6B,eAAe,eAClCC,EAAU9B,SAAS6B,eAAe,iBAExC,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAASG,UAAUC,SAAS,YAC9BJ,EAAQG,UAAUE,OAAO,UACrBH,IAASA,EAAQ5B,MAAMmB,OAAS,QAE7B,OAAPO,QAAO,IAAPA,KAASG,UAAUG,IAAI,UACnBJ,IAASA,EAAQ5B,MAAMmB,OAAS,SAUnBc,KAEf,4BACE,wBAAIvC,UAAU,SACd,wBAAIA,UAAU,SACd,wBAAIA,UAAU,WAIlB,0BAAMA,UAAU,eAAeF,GAAG,gBAChC,4BAAKC,MC1BE,cAAoD,IAAjDyC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,YAAa3B,EAA6B,EAA7BA,QACnC,SAAS4B,IACP,IAAMV,EAAU5B,SAAS6B,eAAe,eAClCC,EAAU9B,SAAS6B,eAAe,gBACpCD,GAAWE,IACbF,EAAQG,UAAUE,OAAO,UACzBH,EAAQ5B,MAAMmB,OAAS,MAGzBd,YAAW,kBAAMG,MAAW,KAI9B,OACE,wBAAI6B,IAAKH,EAAMxC,UAAU,YAAYc,QAAS,kBAAM4B,MAClD,wBAAI1C,UAAU,aAAawC,GAC3B,uBAAGxC,UAAU,oBAAoByC,KCnBxB,aAKb,OACE,kBAACG,EAAD,KACE,kBAACC,EAAD,CACEL,KAAK,kBACLC,YAAY,oCACZ3B,QAAS,kCACPV,SACG6B,eAAe,kBAFX,aACP,EAEIa,eAAe,CAAEpB,SAAU,cAGnC,kBAACmB,EAAD,CACEL,KAAK,iBACLC,YAAY,oCACZ3B,QAAS,kCACPV,SACG6B,eAAe,iBAFX,aACP,EAEIa,eAAe,CAAEpB,SAAU,cAGnC,kBAACmB,EAAD,CACEL,KAAK,sBACLC,YAAY,uCACZ3B,QAAS,kCACPV,SACG6B,eAAe,oBAFX,aACP,EAEIa,eAAe,CAAEpB,SAAU,cAGnC,kBAACmB,EAAD,CACEL,KAAK,gBACLC,YAAY,wCACZ3B,QAAS,kBAAMZ,OAAO6C,KLzC5B,mGKyCyC,aAErC,kBAACF,EAAD,CACEL,KAAK,aACLC,YAAY,mCACZ3B,QAAS,WAxCbZ,OAAO8C,SAASC,KAAO,gCA0CrB,kBAACJ,EAAD,CACEL,KAAK,WACLC,YAAY,yCACZ3B,QAAS,kBAAMZ,OAAO6C,KLjDP,yCKiDqB,eChD7B,aACb,OACE,kBAACnB,EAAD,CAAM9B,GAAG,SAASE,UAAU,UAC1B,iCACE,qDACA,2BNMN,uQMJI,iCACE,kDACA,2BACE,wCADF,6EAKA,2BACE,6CADF,uFCdO,aACb,OACE,kBAAC4B,EAAD,CAAM9B,GAAG,YAAYE,UAAU,aAC7B,iCACE,6CACA,2BACE,qCADF,qDAGA,2BACE,0CADF,mDAGA,2BACE,qCADF,uFAKF,iCACE,8CACA,2BPbN,wRQ6DakD,MAtDf,WAYE,OACE,0BAAMlD,UAAU,OACd,kBAACmD,EAAD,MACA,kBAACC,EAAD,MACA,iCACE,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,SCxBYC,QACW,cAA7BvD,OAAO8C,SAASU,UAEe,UAA7BxD,OAAO8C,SAASU,UAEhBxD,OAAO8C,SAASU,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1D,SAAS6B,eAAe,SDiIpB,kBAAmB8B,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.eda59849.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-picture.d5c1d7c0.jpg\";","import React from \"react\";\r\n\r\ninterface PageProps {\r\n  id: string;\r\n  className: string;\r\n  children: any;\r\n}\r\nexport default ({ id, children, className }: PageProps) => {\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n\r\n  let debounceResize: any;\r\n  const recalculate = (vh: number) =>\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    let vh = window.innerHeight * 0.01;\r\n    clearTimeout(debounceResize);\r\n    setTimeout(() => recalculate(vh), 800);\r\n  });\r\n\r\n  let pageClass: string = \"page\";\r\n  if (className) pageClass += ` ${className}`;\r\n\r\n  function slideDown(e: any) {\r\n    // get offset to determine \"top\" target\r\n    let self = e.target.parentElement;\r\n    if (!self) return;\r\n    var offset = self.getBoundingClientRect();\r\n    var scroll = self.offsetTop;\r\n\r\n    //smooth slide.\r\n    window.scrollTo({ top: offset.height + scroll, behavior: \"smooth\" });\r\n  }\r\n\r\n  function slideTop() {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }\r\n\r\n  return (\r\n    <section id={id} className={pageClass}>\r\n      {children}\r\n      <button className=\"next-button\" onClick={(e) => slideDown(e)}>\r\n        &#8595;\r\n      </button>\r\n      <button className=\"slide-top-button\" onClick={() => slideTop()}>\r\n        &#10514;\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Page from \"../components/Page/Page\";\r\nimport { text_aboutMe } from \"../consts\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Page id=\"aboutMe\" className=\"aboutMe\">\r\n      <article>\r\n        <header>litt om mcklien</header>\r\n        <p>{text_aboutMe}</p>\r\n      </article>\r\n      <article>\r\n        <header>nøkkelkompetanse</header>\r\n        <ul>\r\n          <li>HTML5, CSS3, JavaScript, TypeScript og ReactJS.</li>\r\n          <li>læringsvillig, engasjert og faglig nysgjerrig. </li>\r\n          <li>fleksibel. trives med varierte arbeidsoppgaver. </li>\r\n          <li>lagspiller som også evner å jobbe selvstendig.&nbsp;</li>\r\n          <li>jobber strukturert, målbevisst og med stor arbeidskapasitet.</li>\r\n        </ul>\r\n      </article>\r\n    </Page>\r\n  );\r\n  return (\r\n    <main className=\"container\">\r\n      <section>\r\n        <article>\r\n          <header>&#60;relevant erfaring &#47;&#62;</header>\r\n          <p>\r\n            Hovedansvarlig for frontend utviklingen hos en startup. Jobbet med\r\n            React, HTML, CSS, JS og TypeScript. Varierte arbeidsoppgaver som å\r\n            implementere nye design, responsivt designing som kan brukes på alle\r\n            flater, vedlikehold, testing, osv.\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#60;om mcklien &#47;&#62;</header>\r\n          <p>\r\n            Jeg kommer fra filippinene og har bodd i Norge siden 2012. Jeg er en\r\n            frontend utvikler med bakgrunn i webapplikasjon. Jeg er nysgjerrig\r\n            på nye moderne teknologi og brenner for å ta den i bruk i å skape\r\n            noe som virkelig betyr noe og skape en bedre fremtid.\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#60;motivasjon &#47;&#62;</header>\r\n          <p>\r\n            Jeg er dypt motivert i å jobbe med gode digitale tjenester og\r\n            utvikling for mobile plattform. Jeg er interessert i å jobbe med nye\r\n            og spennende prosjekter med stor samfunnsbetydning og stor\r\n            offentlige interesse som gir gode mulighet for faglig og personlig\r\n            utvikling.\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#60;Nøkkel kompetanse &#47;&#62;</header>\r\n          <ul>\r\n            <li>HTML, SCSS, JavaScript, TypeScript og React.</li>\r\n            <li>Læringsvillig, engasjert og faglig nysgjerrig </li>\r\n            <li>Fleksibel og trives med varierte arbeidsoppgaver </li>\r\n            <li>Lagspiller som også evner å jobbe selvstendig</li>\r\n            <li> God kommunikasjon</li>\r\n            <li>Jobber strukturert, målbevisst og med stor arbeidskapasitet</li>\r\n          </ul>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#60;studiet &#47;&#62;</header>\r\n          <p>\r\n            <b>OsloMet.</b> <br /> webapplikasjon, universell utforming og\r\n            nettverk- og systemadministrasjon\r\n          </p>\r\n          <p>\r\n            <b>Kristiania.</b>\r\n            <br /> forbrukeratferd, kreativitet, innovasjon og nyskapning, og\r\n            mobile økosystemer\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#60;teknologi &#47;&#62;</header>\r\n          <p>\r\n            <b>koder.</b> React, HTML, SCSS, JavaScript, TypeScript.\r\n          </p>\r\n          <p>\r\n            <b>verktøy.</b> Git, DevTools, Jira, Slack, devOps, NPM, osv.\r\n          </p>\r\n          <p>\r\n            <b>annet.</b> Figma, MaterialUI, responsive, Scrum, Continuous\r\n            deployment\r\n          </p>\r\n        </article>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","export const cvLink =\r\n  \"https://docs.google.com/document/d/1w7j3xbgvnlE5JDx7bVEQ4pzm30AxFr-n07321r5k5Kk/edit?usp=sharing\";\r\n\r\nexport const srcLink = \"https://github.com/mcktivity/portfolio\";\r\n\r\nexport const text_banner =\r\n  \"frontend utvikler som brenner for å skape det beste design med helhetlig brukeropplevelse på alle flater\";\r\n\r\nexport const text_motivasjon =\r\n  \"Jeg er dypt motivert i å jobbe med gode digitale tjenester og utvikling for mobile plattform. Jeg er interessert i å jobbe med nye og spennende prosjekter med stor samfunnsbetydning og stor offentlige interesse som gir gode mulighet for faglig og personlig utvikling.\";\r\n\r\nexport const text_aboutMe =\r\n  \"Jeg kom fra filippinene og har bodd i Norge siden 2012. Jeg er en frontend utvikler med bakgrunn i webapplikasjon. Jeg er nysgjerrig på nye moderne teknologi og brenner for å ta den i bruk i å skape noe som virkelig betyr noe og skape en bedre fremtid.\";\r\n\r\nexport const text_erfaring =\r\n  \"Hovedansvarlig for frontend utviklingen hos en startup. Jobbet med ReactJs, HTML, CSS/SCSS, JavaScript og TypeScript. Varierte arbeidsoppgaver som å implementere nye design, responsivt designing som kan brukes på alle flater, vedlikehold, testing, osv.\";\r\n","import React from \"react\";\r\nimport Page from \"../components/Page/Page\";\r\nimport { text_banner } from \"../consts\";\r\nimport ProfilePic from \"./../images/profile-picture.jpg\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Page id=\"banner\" className=\"banner\">\r\n      <img src={ProfilePic} />\r\n      <h2>&#60;navn: mcklien &#47;&#62;</h2>\r\n      <h3>{text_banner}</h3>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return <p className=\"logo\">&#60;mcklien &#47;&#62;</p>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ children }: { children: any }) => {\r\n  //   const [open, setOpen] = useState<boolean>(false);\r\n\r\n  function openMenu() {\r\n    const menuBtn = document.getElementById(\"menu-button\");\r\n    const overlay = document.getElementById(\"menu-overlay\");\r\n\r\n    if (menuBtn?.classList.contains(\"active\")) {\r\n      menuBtn.classList.remove(\"active\");\r\n      if (overlay) overlay.style.height = \"0%\";\r\n    } else {\r\n      menuBtn?.classList.add(\"active\");\r\n      if (overlay) overlay.style.height = \"100%\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        id=\"menu-button\"\r\n        className=\"menu-btn\"\r\n        name=\"menu-icon\"\r\n        onClick={() => openMenu()}\r\n      >\r\n        <ul>\r\n          <li className=\"line\"></li>\r\n          <li className=\"line\"></li>\r\n          <li className=\"line\"></li>\r\n        </ul>\r\n      </button>\r\n\r\n      <main className=\"menu-overlay\" id=\"menu-overlay\">\r\n        <ul>{children}</ul>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\ninterface MenuItemProps {\r\n  link: string;\r\n  description: string;\r\n  onClick(): void;\r\n}\r\n\r\nexport default ({ link, description, onClick }: MenuItemProps) => {\r\n  function closeMenu() {\r\n    const menuBtn = document.getElementById(\"menu-button\");\r\n    const overlay = document.getElementById(\"menu-overlay\");\r\n    if (menuBtn && overlay) {\r\n      menuBtn.classList.remove(\"active\");\r\n      overlay.style.height = \"0%\";\r\n    }\r\n\r\n    setTimeout(() => onClick(), 400);\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <li key={link} className=\"menu-item\" onClick={() => closeMenu()}>\r\n      <h3 className=\"item-link\">{link}</h3>\r\n      <p className=\"item-description\">{description}</p>\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"../components/Menu/Menu\";\r\nimport MenuItem from \"../components/Menu/MenuItem\";\r\nimport { cvLink, srcLink } from \"../consts\";\r\n\r\nexport default () => {\r\n  function sendMail() {\r\n    window.location.href = \"mailto:mronoya@hotmail.com\";\r\n  }\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuItem\r\n        link=\"litt om mcklien\"\r\n        description=\"nøkkelkompetanse. litt om meg.\"\r\n        onClick={() =>\r\n          document\r\n            .getElementById(\"aboutMe\")\r\n            ?.scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n      />\r\n      <MenuItem\r\n        link=\"arbeid, studie\"\r\n        description=\"relevant arbeidserfaring. studie.\"\r\n        onClick={() =>\r\n          document\r\n            .getElementById(\"arbeid\")\r\n            ?.scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n      />\r\n      <MenuItem\r\n        link=\"teknologi, kunnskap\"\r\n        description=\"teknologi, verktøy og kunnskaper.\"\r\n        onClick={() =>\r\n          document\r\n            .getElementById(\"teknologi\")\r\n            ?.scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n      />\r\n      <MenuItem\r\n        link=\"les hele cven\"\r\n        description=\"oppdatert cv. åpnes i Google Docs.\"\r\n        onClick={() => window.open(cvLink, \"_blank\")}\r\n      />\r\n      <MenuItem\r\n        link=\"ta kontakt\"\r\n        description=\"send epost: mronoya@hotmail.com \"\r\n        onClick={() => sendMail()}\r\n      />\r\n      <MenuItem\r\n        link=\"src kode\"\r\n        description=\"kode bak portfolio. åpnes i Github.\"\r\n        onClick={() => window.open(srcLink, \"_blank\")}\r\n      />\r\n    </Menu>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Page from \"../components/Page/Page\";\r\nimport { text_erfaring } from \"../consts\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Page id=\"arbeid\" className=\"arbeid\">\r\n      <article>\r\n        <header>relevant erfaring</header>\r\n        <p>{text_erfaring}</p>\r\n      </article>\r\n      <article>\r\n        <header>studie. emner.</header>\r\n        <p>\r\n          <b>OsloMet. </b>\r\n          webapplikasjon, universell utforming og nettverk- og\r\n          systemadministrasjon\r\n        </p>\r\n        <p>\r\n          <b>H Kristiania. </b>\r\n          forbrukeratferd, kreativitet, innovasjon og nyskapning, og mobile\r\n          økosystemer\r\n        </p>\r\n      </article>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Page from \"../components/Page/Page\";\r\nimport { text_motivasjon } from \"../consts\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Page id=\"teknologi\" className=\"teknologi\">\r\n      <article>\r\n        <header>teknologi</header>\r\n        <p>\r\n          <b>koder.</b> ReactJs, HTML, CSS/SCSS, JavaScript, TypeScript.\r\n        </p>\r\n        <p>\r\n          <b>verktøy.</b> Git, DevTools, Jira, Slack, devOps, node, osv.\r\n        </p>\r\n        <p>\r\n          <b>annet.</b> responsive design, continuous deployment, object oriented,\r\n          functional programming\r\n        </p>\r\n      </article>\r\n      <article>\r\n        <header>motivasjon</header>\r\n        <p>{text_motivasjon}</p>\r\n      </article>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./css/site.scss\";\n\nimport About from \"./views/About\";\nimport Navbar from \"./components/NavBar/Navbar\";\nimport Banner from \"./views/Banner\";\nimport Logo from \"./views/Logo\";\nimport SocialMedia from \"./views/SocialMedia\";\nimport Page from \"./components/Page/Page\";\nimport Container from \"./components/Container/Container\";\nimport Menu from \"./components/Menu/Menu\";\nimport MenuItem from \"./components/Menu/MenuItem\";\nimport Navigation from \"./views/Navigation\";\nimport Arbeid from \"./views/Arbeid\";\nimport Teknologi from \"./views/Teknologi\";\n\nfunction App() {\n  // Under arbeid\n  //\n  // const hour = () => {\n  //   if (new Date().getHours() > 16) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // };\n  // const [isNight, setNight] = useState(true);\n\n  return (\n    <main className=\"App\">\n      <Logo />\n      <Navigation />\n      <section>\n        <Banner />\n        <About />\n        <Arbeid />\n        <Teknologi />\n      </section>\n\n      {/* \n      <Navbar>\n        <p>\n          <a\n            href=\"https://docs.google.com/document/d/1w7j3xbgvnlE5JDx7bVEQ4pzm30AxFr-n07321r5k5Kk/edit?usp=sharing\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Les CVen\n          </a>\n          Fullt cv på Google Docs. Åpnes i nytt vindu.\n          <a\n            href=\"https://github.com/mcktivity/portfolio\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Src kode\n          </a>\n          Source kode i Github. Åpnes i nytt vindu.\n        </p>\n        <SocialMedia />\n        <p>nye og spennende prosjekter kommer senere.</p>\n      </Navbar>\n      <Banner />\n      <section className=\"about\">\n        <About />\n      </section> */}\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}