{"version":3,"sources":["images/profile-picture.jpg","views/About.tsx","components/NavBar/Navbar.tsx","views/Scenery.tsx","views/Banner.tsx","views/Logo.tsx","views/SocialMedia.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","className","src","ProfilePic","alt","children","useState","open","setOpen","height","iconClass","onClick","style","Scenery","title","image","link","width","map","data","key","href","target","rel","App","Logo","Navbar","SocialMedia","Banner","About","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bcedbcf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-picture.d5c1d7c0.jpg\";","import React from \"react\";\r\nimport ProfilePic from \"./../images/profile-picture.jpg\";\r\n\r\nexport default () => {\r\n  return (\r\n    <main className=\"container\">\r\n      <section>\r\n        <article>\r\n          <header>&#x276E;relevant erfaring &#8725;&#x276F;</header>\r\n          <p>\r\n            Hovedansvarlig for frontend utviklingen hos en startup. Jobbet med\r\n            React, HTML, CSS, JS og TypeScript. Varierte arbeidsoppgaver som å\r\n            implementere nye design, responsivt designing som kan brukes på alle\r\n            flater, vedlikehold, testing, osv.\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <img src={ProfilePic} className=\"profile-pic\" alt=\"profile\" />\r\n          <header>&#x276E;om mcklien &#8725;&#x276F;</header>\r\n          <p>\r\n            Jeg kommer fra filippinene og har bodd i Norge\r\n            siden 2012. Jeg er en frontend utvikler med bakgrunn i\r\n            webapplikasjon. Jeg er nysgjerrig på nye moderne teknologi og\r\n            brenner for å ta den i bruk i å skape noe som virkelig betyr noe og\r\n            skape en bedre fremtid.\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#x276E;motivasjon &#8725;&#x276F;</header>\r\n          <p>\r\n            Jeg er dypt motivert i å jobbe med gode digitale tjenester og\r\n            utvikling for mobile plattform. Jeg er interessert i å jobbe med nye\r\n            og spennende prosjekter med stor samfunnsbetydning og stor\r\n            offentlige interesse som gir gode mulighet for faglig og personlig\r\n            utvikling.\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#x276E;Nøkkel kompetanse &#8725;&#x276F;</header>\r\n          <ul>\r\n            <li>HTML, SCSS, JavaScript, TypeScript og React.</li>\r\n            <li>Læringsvillig, engasjert og faglig nysgjerrig </li>\r\n            <li>Fleksibel og trives med varierte arbeidsoppgaver </li>\r\n            <li>Lagspiller som også evner å jobbe selvstendig</li>\r\n            <li> God kommunikasjon</li>\r\n            <li>Jobber strukturert, målbevisst og med stor arbeidskapasitet</li>\r\n          </ul>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#x276E;studiet &#8725;&#x276F;</header>\r\n          <p>\r\n            <b>OsloMet.</b> <br /> webapplikasjon, universell utforming og\r\n            nettverk- og systemadministrasjon\r\n          </p>\r\n          <p>\r\n            <b>Kristiania.</b>\r\n            <br /> forbrukeratferd, kreativitet, innovasjon og nyskapning, og\r\n            mobile økosystemer\r\n          </p>\r\n        </article>\r\n      </section>\r\n      <section>\r\n        <article>\r\n          <header>&#x276E;teknologi &#8725;&#x276F;</header>\r\n          <p>\r\n            <b>koder.</b> React, HTML, SCSS, JavaScript, TypeScript.\r\n          </p>\r\n          <p>\r\n            <b>verktøy.</b> Git, DevTools, Jira, Slack, devOps, NPM, osv.\r\n          </p>\r\n          <p>\r\n            <b>annet.</b> Figma, MaterialUI, responsive, Scrum, Continuous\r\n            deployment\r\n          </p>\r\n        </article>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default ({ children }: { children: any }) => {\r\n  const [open, setOpen] = useState(false);\r\n  let height = \"0\";\r\n  let iconClass = \"menu-btn\";\r\n\r\n  if (open) {\r\n    height = \"100%\";\r\n    iconClass += \" active\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu-icon\">\r\n        <div className={iconClass} onClick={() => setOpen(!open)}>\r\n          <ul>\r\n            <li className=\"line\"></li>\r\n            <li className=\"line\"></li>\r\n            <li className=\"line\"></li>\r\n          </ul>\r\n          <div className=\"menu-txt\">meny</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overlay\" style={{ height: height }}>\r\n        <div className=\"overlay-content\">{children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <main className=\"scenery\">\r\n      <section className=\"sky\">\r\n        <div className=\"wind a\" />\r\n        <div className=\"wind b\" />\r\n        <div className=\"wind c\" />\r\n      </section>\r\n      <section className=\"ground\">\r\n        <div className=\"mountain--medium\" />\r\n        <div className=\"mountain--huge\" />\r\n        <div className=\"mountain--large\" />\r\n        <div className=\"mountain--low\" />\r\n        <div className=\"tree tree_1\" />\r\n        <div className=\"tree tree_2\" />\r\n        <div className=\"tree tree_3\" />\r\n        <div className=\"tree tree_4\" />\r\n        <div className=\"tree tree_5\" />\r\n      </section>\r\n      <hr className=\"grass\" />\r\n    </main>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Scenery from \"./Scenery\";\r\n\r\nexport default () => {\r\n  return (\r\n    <section className=\"banner\">\r\n      <header>&#x276E;frontend utvikler &#8725;&#x276F;</header>\r\n      <p>\r\n        Brenner for å skape det beste Design med helhetlig Brukeropplevelse på\r\n        Alle flater\r\n      </p>\r\n\r\n      <Scenery />\r\n      <span>mer Om Mcklien;</span>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return <p className=\"logo\">&#x276E;mcklien &#8725; &#x276F;</p>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  const data = [\r\n    {\r\n      title: \"linkedIn profile\",\r\n      image:\r\n        \"https://icon-library.net//images/linked-in-icon-small/linked-in-icon-small-17.jpg\",\r\n      link: \"https://www.linkedin.com/in/mcklien-ross/\",\r\n      width: \"50px\",\r\n    },\r\n    {\r\n      title: \"facebook profile\",\r\n      image:\r\n        \"https://icon-library.net//images/high-resolution-facebook-icon/high-resolution-facebook-icon-8.jpg\",\r\n      link: \"https://www.facebook.com/mcklienRoss/\",\r\n      width: \"65px\",\r\n    },\r\n    {\r\n      title: \"github profile\",\r\n      image:\r\n        \"https://icon-library.net//images/github-social-media-icon/github-social-media-icon-22.jpg\",\r\n      link: \"https://github.com/mcktivity\",\r\n      width: \"50px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <main className=\"social-media\">\r\n      <header>ta kontakt:</header>\r\n\r\n      <p>\r\n        E-post: mronoya@hotmail.com\r\n        <br />\r\n        Tlf. nr: +47 40 64 41 92\r\n        <br />\r\n        Vestaveien 13, 1476 Rasta, Akershus\r\n      </p>\r\n\r\n      <section>\r\n        {data.map((data) => (\r\n          <a\r\n            key={data.title}\r\n            href={data.link}\r\n            title={data.title}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img src={data.image} width={data.width} alt={`${data.title} icon`} />\r\n          </a>\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./css/site.scss\";\n\nimport About from \"./views/About\";\nimport Navbar from \"./components/NavBar/Navbar\";\nimport Banner from \"./views/Banner\";\nimport Logo from \"./views/Logo\";\nimport SocialMedia from \"./views/SocialMedia\";\n\nfunction App() {\n  // Under arbeid\n  //\n  // const hour = () => {\n  //   if (new Date().getHours() > 16) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // };\n  // const [isNight, setNight] = useState(true);\n\n  return (\n    <main className=\"App\">\n      <Logo />\n      <Navbar>\n        <p>\n          <a\n            href=\"https://docs.google.com/document/d/1w7j3xbgvnlE5JDx7bVEQ4pzm30AxFr-n07321r5k5Kk/edit?usp=sharing\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Les CVen\n          </a>\n          Fullt cv på Google Docs. Åpnes i nytt vindu.\n          <a\n            href=\"https://github.com/mcktivity/portfolio\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Src kode\n          </a>\n          Source kode i Github. Åpnes i nytt vindu.\n        </p>\n        <SocialMedia />\n        <p>nye og spennende prosjekter kommer senere.</p>\n      </Navbar>\n      <Banner />\n      <section className=\"about\">\n        <About />\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}